/*
 * SubproblemHandler.h
 *
 *  Created on: Nov 12, 2008
 *      Author: lars
 */

#ifndef SUBPROBLEMHANDLER_H_
#define SUBPROBLEMHANDLER_H_

#include "SearchSpace.h"


#ifdef PARALLEL_MODE

//#include "pstream.h"

/* Instances of this class handle one specific subproblem
 * generated by the search  */
class SubproblemHandler {

protected:
  SearchSpaceMaster* m_spaceMaster;
  SearchNode* m_rootnode;

public:

  // takes the next subproblem, takes care of its processing
  // (in whatever way, possibly on another machine) and
  // feeds the result back into the search space
  virtual void operator() () = 0;

public:
  SubproblemHandler(SearchSpaceMaster* p, SearchNode* n);

};


/* Constructors */
inline SubproblemHandler::SubproblemHandler(SearchSpaceMaster* p, SearchNode* n) :
  m_spaceMaster(p), m_rootnode(n) {}

#endif /* PARALLEL_MODE */

#endif /* SUBPROBLEMHANDLER_H_ */
